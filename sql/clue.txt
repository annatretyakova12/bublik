docker network list
docker network create \
  --driver=bridge \
  --subnet=172.28.0.0/16 \
  --gateway=172.28.5.254 \
  bublik-network

docker run -d -h cs1 --ip 172.28.0.1 \
    --name cs1 --network bublik-network -p 9042:9042 \
    -v ./dockerfiles/jvm-server.options:/etc/cassandra/jvm-server.options \
    -e CASSANDRA_SEEDS=172.28.0.1 \
    -e CASSANDRA_DC=dc1 \
    -e CASSANDRA_CLUSTER_NAME=bublik \
    cassandra

docker run -d -h cs2 --ip 172.28.0.2 \
    --name cs2 --network bublik-network \
    -v ./dockerfiles/jvm-server.options:/etc/cassandra/jvm-server.options \
    -e CASSANDRA_SEEDS=172.28.0.1 \
    -e CASSANDRA_DC=dc1 \
    -e CASSANDRA_CLUSTER_NAME=bublik \
    cassandra ; docker cp cs/jmxsh-R5.jar cs2:/root

docker run -d -h cs3 --ip 172.28.0.3 \
    --name cs3 --network bublik-network \
    -v ./dockerfiles/jvm-server.options:/etc/cassandra/jvm-server.options \
    -e CASSANDRA_SEEDS=172.28.0.1,172.28.0.2 \
    -e CASSANDRA_DC=dc1 \
    -e CASSANDRA_CLUSTER_NAME=bublik \
    cassandra

mvn -f bublik/pom.xml clean install -DskipTests ; mvn -f cli/pom.xml clean package -DskipTests ; \
    psql postgresql://test:test@localhost/postgres -c "drop table ctid_chunks" ; \
    cqlsh -f ./sql/data.cql ; \
    docker rm cli -f ; \
    docker build --no-cache -t cli . ; \
    docker run -h cli --network bublik-network --name cli cli

nodetool sjk mx -mg -b org.apache.cassandra.db:type=StorageService -f BatchSizeFailureThreshold
docker exec -it cs1 nodetool sjk mx -ms -b org.apache.cassandra.db:type=StorageService -f BatchSizeFailureThreshold -v 500
docker exec -it cs2 nodetool sjk mx -ms -b org.apache.cassandra.db:type=StorageService -f BatchSizeFailureThreshold -v 500
docker exec -it cs3 nodetool sjk mx -ms -b org.apache.cassandra.db:type=StorageService -f BatchSizeFailureThreshold -v 500

docker exec cs2 nodetool status

docker network rm bublik-network

docker run -d --name ydb -h localhost \
  --platform linux/amd64 \
  -p 2135:2135 -p 2136:2136 -p 8765:8765 \
  -v $(pwd)/ydb_certs:/ydb_certs -v $(pwd)/ydb_data:/ydb_data \
  -e GRPC_TLS_PORT=2135 -e GRPC_PORT=2136 -e MON_PORT=8765 \
  -e YDB_USE_IN_MEMORY_PDISKS=true \
  cr.yandex/yc/yandex-docker-local-ydb:latest

ydb -e grpc://localhost:2136 -d $PWD/ydb_data
